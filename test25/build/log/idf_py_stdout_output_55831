[1/11] Performing build step for 'bootloader'
[1/1] cd /home/ehsan/esp-dl/examples/test25/build/bootloader/esp-idf/esptool_py && /home/ehsan/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/ehsan/esp/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/ehsan/esp-dl/examples/test25/build/bootloader/bootloader.bin
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[2/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/__/model/Mnist_coefficient.cpp.obj
[3/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/app_main.cpp.obj
/home/ehsan/esp-dl/examples/test25/main/app_main.cpp: In function 'void app_main()':
/home/ehsan/esp-dl/examples/test25/main/app_main.cpp:43:11: warning: unused variable 'max_score' [-Wunused-variable]
   43 |     float max_score = score[0];
      |           ^~~~~~~~~
/home/ehsan/esp-dl/examples/test25/main/app_main.cpp:44:9: warning: unused variable 'max_index' [-Wunused-variable]
   44 |     int max_index = 0;
      |         ^~~~~~~~~
[4/9] Linking C static library esp-idf/main/libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable deploy.elf
[7/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/ehsan/esp-dl/examples/test25/build/deploy.bin
[8/9] cd /home/ehsan/esp-dl/examples/test25/build/esp-idf/esptool_py && /home/ehsan/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/ehsan/esp/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/ehsan/esp-dl/examples/test25/build/partition_table/partition-table.bin /home/ehsan/esp-dl/examples/test25/build/deploy.bin
deploy.bin binary size 0x80d80 bytes. Smallest app partition is 0x100000 bytes. 0x7f280 bytes (50%) free.
[8/9] cd /home/ehsan/esp/esp-idf-v5.0/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/ehsan/esp/esp-idf-v5.0 -D "SERIAL_TOOL=/home/ehsan/.espressif/python_env/idf5.0_py3.10_env/bin/python;;/home/ehsan/esp/esp-idf-v5.0/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/ehsan/esp-dl/examples/test25/build -P /home/ehsan/esp/esp-idf-v5.0/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 deploy.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/ttyUSB0
Connecting.........
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 8c:4b:14:e1:53:6c
Uploading stub...

A fatal error occurred: Failed to write to target RAM (result was 01070000: Operation timed out)
FAILED: CMakeFiles/flash /home/ehsan/esp-dl/examples/test25/build/CMakeFiles/flash 
cd /home/ehsan/esp/esp-idf-v5.0/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/ehsan/esp/esp-idf-v5.0 -D "SERIAL_TOOL=/home/ehsan/.espressif/python_env/idf5.0_py3.10_env/bin/python;;/home/ehsan/esp/esp-idf-v5.0/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/ehsan/esp-dl/examples/test25/build -P /home/ehsan/esp/esp-idf-v5.0/components/esptool_py/run_serial_tool.cmake
ninja: build stopped: subcommand failed.
